Enabling and Disabling CPU interrupts:

    - Interrupts are globally enabled or diabled on the CPU with the INTM bit of status register ST1
    - Additionally, interrupts (0-15) are masked or unmasked in the CPU IER register
    - Pending interrupts (waiting approval from the CPU) are flagged in the IFR register

PIE Block:
    
    - PIE block enabled with ENPIE bit of PIECTRL: interrupt vectors fetched from PIE and not
        CPU interrupt vector table directly
    - Each group has enable (PIEIERx) and flag (PIEIFRx) register
    - The appripriate PIEACK bit must be cleared by the ISR to re-enable interrupts from
        other peripherals that group

Interrupt handling flow:

    - Interrupt is accepted by CPU if appropriate IER bit set and INTM = 0
    - Clear IFR bit
    - Prepare pipeline, PC, etc.
    - Save context (including ST1 and IER)
    - Clear appropriate IER bit, set INTM, etc (maskable interrupts disabled)
    - Execute ISR
    - Restore context (interrupts enabled as before entering ISR)

Data types:

    - TS's C compiler represents char, short, and ints all as 16 bit values (there
        are no 8-bit data types!)
    - long ints are 32 bit values

Flash Notes:
    - SDFlash only programs flash sections in Page 0! Don't place flash segments in
        page 1.

Jumper Settings:

    - Boot from SCI: 1, 3, 9, 13
